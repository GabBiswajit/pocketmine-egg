#!/bin/bash

apt-get update
apt-get install -y git curl wget jq file tar unzip zip

mkdir -p /mnt/server/ # Not required. Only here for parkervcp's local test setup

cd /mnt/server || exit 1

ARCH=$([[ "$(uname -m)" == "x86_64" ]] && printf "amd64" || printf "arm64")

# Shouldn't be possible to be empty, but default to PM5 if it is and convert to uppercase
VERSION="${VERSION:-PM5}"
VERSION="${VERSION^^}"

# Helper functions

download_php_binary() {
  echo "Downloading latest PHP $REQUIRED_PHP_VERSION binary for $VERSION"

  curl --location --progress-bar \
    "https://github.com/pmmp/PHP-Binaries/releases/download/pm5-php-${REQUIRED_PHP_VERSION}-latest/PHP-${REQUIRED_PHP_VERSION}-Linux-x86_64-${VERSION}.tar.gz" \
    | tar -xzv
}


set_php_extension_dir() {
  printf "Configuring php.ini\n"
  EXTENSION_DIR=$(find "bin" -name '*debug-zts*')
  grep -q '^extension_dir' bin/php7/bin/php.ini && sed -i'bak' "s{^extension_dir=.*{extension_dir=\"$EXTENSION_DIR\"{" bin/php7/bin/php.ini || echo "extension_dir=\"$EXTENSION_DIR\"" >>bin/php7/bin/php.ini
}

download_pmmp() {
  DOWNLOAD_LINK=$(curl -sSL https://update.pmmp.io/api?channel="$API_CHANNEL" | jq -r '.download_url')
  printf "Downloading %s from %s\n" "$VERSION" "${DOWNLOAD_LINK}"
  curl --location --progress-bar "${DOWNLOAD_LINK}" --output PocketMine-MP.phar
}

# We have to convert VERSION into an API channel
if [[ "${VERSION}" == "PM4" ]]; then
  API_CHANNEL="4"

elif [[ "${VERSION}" == "PM5" ]]; then
   API_CHANNEL="stable"
else
  printf "Unsupported version: %s" "${VERSION}"
  exit 1
fi

REQUIRED_PHP_VERSION=$(curl -sSL https://update.pmmp.io/api?channel="$API_CHANNEL" | jq -r '.php_version')

if [[ "${ARCH}" == "amd64" ]]; then
  download_php_binary

# There are no ARM64 PHP binaries yet, so we have to compile them
else
  apt install -y make autoconf automake m4 bzip2 bison g++ cmake pkg-config re2c libtool-bin
  
  mkdir -p /mnt/server/build_cache/archives
  mkdir -p /mnt/server/build_cache/compilation
  
  # Each PHP version has its own compile script, so we have to download the correct one
  echo "running curl --location --progress-bar --remote-name https://raw.githubusercontent.com/pmmp/PHP-Binaries/php/"$REQUIRED_PHP_VERSION"/compile.sh"
  curl --location --progress-bar --remote-name https://raw.githubusercontent.com/pmmp/PHP-Binaries/php/"$REQUIRED_PHP_VERSION"/compile.sh
  chmod +x compile.sh

  cat <<EOF
----------------------------------------
|                                      |
|   Compiling PHP Binary for ARM64     |
|                                      |
|  This is a time consuming process    |
----------------------------------------
EOF

  printf "\n\nCompiling PHP binary, this is a slow process and will take time\n"
  THREADS=$(grep -c ^processor /proc/cpuinfo) || THREADS=1
  ./compile.sh -j "${THREADS}" -c /mnt/server/build_cache/archives -l /mnt/server/build_cache/compilation -P ${VERSION:2}
  rm compile.sh
  rm -rf install_data/

fi

# Steps below are the same for both architectures
download_pmmp
set_php_extension_dir || exit 1

if [[ ! -f server.properties ]]; then
  printf "Downloading default server.properties template\n"
  curl --location --progress-bar --remote-name https://raw.githubusercontent.com/GabBiswajit/pocketmine-egg/main/server.properties
fi

printf "Creating default file and folder structure\n"
touch banned-ips.txt banned-players.txt ops.txt white-list.txt server.log
mkdir -p players worlds plugins resource_packs

cat <<EOF
----------------------------------------
|                                      |
|   PocketMine-MP Installation Done    |
|                                      |
----------------------------------------
EOF
